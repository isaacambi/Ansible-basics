nstall ansible on student-node.
solution
sudo yum install ansible -y

2. Create an Ansible configuration file under /home/bob/playbooks directory
 and disable the SSH host key checking for Ansible.

    Created the Ansible configuration file under "home/bob/playbooks" directory
 and disabled the SSH host key checking for Ansible?

3. Create an Ansible inventory file called inventory for host node01 under /home/bob/playbooks directory.


Below are the details of node01:


Hostname: node01

User: bob

Password: caleston123

    Created an Ansible inventory file called "inventory" for host "node01" under
 "/home/bob/playbooks" directory?
solution
node02 ansible_host=node02 ansible_ssh_pass=caleston123

cd /home/bob/playbooks
ansible -i inventory node02 -m ping -v

4. Create a group called web_nodes in /home/bob/playbooks/inventory inventory file, further 
add node01 and node02 as a member of this group.
Represent the below given data in Ansible Inventory format in /home/bob/playbooks/inventory_table file


Server Alias 	Server Name 	OS 	User 	Password
sql_db1 	sql01.xyz.com 	Linux 	root 	Lin$Pass
sql_db2 	sql02.xyz.com 	Linux 	root 	Lin$Pass
web_node1 	web01.xyz.com 	Win 	administrator 	Win$Pass
web_node2 	web02.xyz.com 	Win 	administrator 	Win$Pass
web_node3 	web03.xyz.com 	Win 	administrator 	Win$Pass


Group 	Members
db_nodes 	sql_db1, sql_db2
web_nodes 	web_node1, web_node2, web_node3
boston_nodes 	sql_db1, web_node1
dallas_nodes 	sql_db2, web_node2, web_node3
us_nodes 	boston_nodes, dallas_nodes

solutions

#Web Servers
web_node1 ansible_host=web01.xyz.com ansible_connection=winrm ansible_user=administrator ansible_password=Win$Pass
web_node2 ansible_host=web02.xyz.com ansible_connection=winrm ansible_user=administrator ansible_password=Win$Pass
web_node3 ansible_host=web03.xyz.com ansible_connection=winrm ansible_user=administrator ansible_password=Win$Pass

#DB Servers
sql_db1 ansible_host=sql01.xyz.com ansible_connection=ssh ansible_user=root ansible_ssh_pass=Lin$Pass
sql_db2 ansible_host=sql02.xyz.com ansible_connection=ssh ansible_user=root ansible_ssh_pass=Lin$Pass

#Groups
[db_nodes]
sql_db1
sql_db2

[web_nodes]
web_node1
web_node2
web_node3

[boston_nodes]
sql_db1
web_node1

[dallas_nodes]
sql_db2
web_node2
web_node3

[us_nodes:children]

8. Create a playbook called /home/bob/playbooks/command.yml which should execute the command 
to display the contents of file /etc/resolv.conf on localhost. Make sure to use command module to complete this task.
solution
---
- name: Execute a command on localhost
  hosts: localhost
  connection: local
  tasks:
    - name: Execute a command
      command: cat /etc/resolv.conf
cd /home/bob/playbooks
ansible-playbook -i localhost, command.yml -vv

9. Create a playbook callled perm.yml under /home/bob/playbooks directory on student-node,
 an inventory file called inventory is already present under /home/bob/playbooks directory 
itself. Using this playbook perform below mentioned tasks:

1. Create an empty file called blog.txt under /opt/news/ directory on node01. Change its group owner to sam .


2. Create an empty file called story.txt under /opt/news/ directory on node02. Change its user owner to sam .

10. ---
- hosts: node01
  become: true
  tasks:
    - name: Creating blog.txt file
      file:
        path: /opt/news/blog.txt
        state: touch
        group: sam

- hosts: node02
  become: true
  tasks:
    - name: Creating story.txt file
      file:
        path: /opt/news/story.txt
        state: touch
        owner: sam




Run the playbook:
cd /home/bob/playbooks
ansible-playbook -i inventory perm.yml

3. Create an Ansible inventory file called inventory for host node01 under /home/bob/playbooks directory.

4. We already have an inventory file /home/bob/playbooks/inventory. Add an alias for node02 host in it. 
Find the below details for the node02 host:
node02 ansible_host=node02 ansible_ssh_pass=caleston
cd /home/bob/playbooks
ansible -i inventory node02 -m ping -v

5. Create a group called web_nodes in /home/bob/playbooks/inventory inventory file,
 further add node01 and node02 as a member of this group.
solution
[web_nodes]
node01
node02

6. Represent the below given data in Ansible Inventory format in /home/bob/playbooks/inventory_table file


sql_db1 	sql01.xyz.com 	Linux 	root 	Lin$Pass
sql_db2 	sql02.xyz.com 	Linux 	root 	Lin$Pass
web_node1 	web01.xyz.com 	Win 	administrator 	Win$Pass
web_node2 	web02.xyz.com 	Win 	administrator 	Win$Pass
web_node3 	web03.xyz.com 	Win 	administrator 	Win$Pass


Group 	Members
db_nodes 	sql_db1, sql_db2
web_nodes 	web_node1, web_node2, web_node3
boston_nodes 	sql_db1, web_node1
dallas_nodes 	sql_db2, web_node2, web_node3
us_nodes 	boston_nodes, dallas_nodes

#Web Servers
web_node1 ansible_host=web01.xyz.com ansible_connection=winrm ansible_user=administrator ansible_password=Win$Pass
web_node2 ansible_host=web02.xyz.com ansible_connection=winrm ansible_user=administrator ansible_password=Win$Pass
web_node3 ansible_host=web03.xyz.com ansible_connection=winrm ansible_user=administrator ansible_password=Win$Pass

#DB Servers
sql_db1 ansible_host=sql01.xyz.com ansible_connection=ssh ansible_user=root ansible_ssh_pass=Lin$Pass
sql_db2 ansible_host=sql02.xyz.com ansible_connection=ssh ansible_user=root ansible_ssh_pass=Lin$Pass

#Groups
[db_nodes]
sql_db1
sql_db2

[web_nodes]
web_node1
web_node2
web_node3

[boston_nodes]
sql_db1
web_node1

[dallas_nodes]
sql_db2
web_node2
web_node3

[us_nodes:children]
boston_nodes
dallas_nodes

7. Create a playbook called /home/bob/playbooks/command.yml which should execute the
 command to display the contents of file /etc/resolv.conf on localhost. Make sure to use 
command module to complete this task.

---
- name: Execute a command on localhost
  hosts: localhost
  connection: local
  tasks:
    - name: Execute a command
      command: cat /etc/resolv.conf
cd /home/bob/playbooks
ansible-playbook -i localhost, command.yml -vv

8. Create a playbook callled perm.yml under /home/bob/playbooks directory on student-node,
 an inventory file called inventory is already present under /home/bob/playbooks directory 
itself. Using this playbook perform below mentioned tasks:


1. Create an empty file called blog.txt under /opt/news/ directory on node01. Change its group owner to sam .


2. Create an empty file called story.txt under /opt/news/ directory on node02. Change its user owner to sam .

- hosts: node01
  become: true
  tasks:
    - name: Creating blog.txt file
      file:
        path: /opt/news/blog.txt
        state: touch
        group: sam

- hosts: node02
  become: true
  tasks:
    - name: Creating story.txt file
      file:
        path: /opt/news/story.txt
        state: touch
        owner: sam

cd /home/bob/playbooks
ansible-playbook -i inventory perm.yml

9. Create a playbook called file.yml under /home/bob/playbooks/ directory and use this
 playbook to create a file called /opt/file.txt on node01 host. The contents of the file
 must be This file is created by Ansible!
--
- hosts: node01
  become: true
  tasks:
    - name: create a file
      copy:
        dest: /opt/file.txt
        content: "This file is created by Ansible!"
cd /home/bob/playbooks
ansible-playbook -i inventory file.yml

10. Create a playbook called copy.yml under /home/bob/playbooks/ directory to
 copy /usr/src/blog/index.html file to both nodes i.e node01 and node02 at location /opt/blog.
---
- hosts: all
  become: true
  tasks:
    - copy:
        src:  /usr/src/blog/index.html
        dest: /opt/blog
        remote_src: yes


11. Write a playbook called replace.yml under /home/bob/playbooks/ directory on student-node
 host, an inventory file called inventory is already present under /home/bob/playbooks directory.
 Perform below given tasks using this playbook:


1. We have a file called /opt/music/blog.txt on node01. Using Ansible replace module replace 
string Kodekloud with Ansible in that file.

---
- hosts: node01
  become: true
  tasks:
    - replace:
        path: /opt/music/blog.txt
        regexp: 'Kodekloud'
        replace: 'Ansible'

- hosts: node02
  become: true
  tasks:
    - replace:
        path: /opt/music/story.txt
        regexp: 'Ansible'
        replace: 'Kodekloud'


12. The playbook /home/bob/playbooks/banana.yml has a variable defined called fruit. 
There are two tasks written in this playbook to print a text.


Use the when conditional to print I am a Banana if the value of fruit is banana otherwise
 it should print I am not a Banana.
solution
---
- name: 'Am I a Banana or not?'
  hosts: localhost
  connection: local
  vars:
    fruit: banana
  tasks:
    - command: 'echo "I am a Banana"'
      when: fruit == "banana"

    - command: 'echo "I am not a Banana"'
      when: fruit != "banana"




Run the playbook in verbose as below:
cd /home/bob/playbooks
ansible-playbook -i localhost, banana.yml -vv

13. The playbook /home/bob/playbooks/fruits.yml currently runs an echo command to print 
a fruit name. Add a loop directive (i.e with_items) in the task to print all fruits 
defined under the fruits variable.
---
- name: 'Print fruits'
  hosts: localhost
  connection: local
  vars:
    fruits:
      - Apple
      - Banana
      - Grapes
      - Orange
  tasks:
    - command: 'echo "{{ item }}"'
      with_items: '{{ fruits }}'


14. Create a playbook called package.yml under /home/bob/playbooks/ directory 
to install vim-enhanced package on student-node.
solution

---
- name: 'Install the required package'
  hosts: localhost
  become: yes
  connection: local
  tasks:
    - yum: 
        name: vim-enhanced
        state: present

15. There is a playbook /home/bob/playbooks/copy_file.yml on student-node. It is supposed 
to perform below tasks but needs some modification, modify this playbook to add some conditions
 so that below tasks can be performed:


1. Copy blog.txt file present under /usr/src/condition directory on student-node to node01 under
 /opt/condition directory. Its user and group owner must be bob and its permissions must be 0640.

---
- hosts: all
  become: true
  tasks:
    - name: Copy file with owner and permissions on node01
      copy:
        src: /usr/src/condition/blog.txt
        dest: /opt/condition/blog.txt
        owner: bob
        group: bob
        mode: "0640"
      when: inventory_hostname == "node01"

    - name: Copy file with owner and permissions on node02
      copy:
        src: /usr/src/condition/story.txt
        dest: /opt/condition/story.txt
        owner: sam
        group: sam
        mode: "0400"
      when: inventory_hostname == "node02"

2. Copy story.txt file present under /usr/src/condition directory on student-node to 
node02 under /opt/condition directory. Its user and group owner must be sam and its permissions must be 0400.

2. We have a file called /opt/music/story.txt on node02. Using Ansible replace module
 replace the string Ansible with Kodekloud in that file.

16. We already have an inventory file called inventory under /home/bob/playbooks directory on student-node.
 Write a playbook called lineinfile.yml under /home/bob/playbooks directory. Perform below given tasks using this playbook :


On node01, a file called /var/www/html/index.html is available. It already has some content. Using Ansible
 lineinfile module add the below given content in it:

Welcome to KodeKloud Labs!


Also make sure to preserve the existing content and this new line must be added at the top of the file.
solution

--
- hosts: node01
  become: true
  tasks:
  - lineinfile:
      path: /var/www/html/index.html
      line: 'Welcome to KodeKloud Labs!'
      state: present
      insertbefore: BOF

17. a. On student-node create an Ansible playbook called service.yml under /home/bob/playbooks/ directory. 
Further configure it to install vsftpd package on both nodes i.e node01 and node02.


b. The playbook must start the vsftpd service on both nodes.


c. The inventory /home/bob/playbooks/inventory is already there on student-node.
solution

---
- hosts: all
  become: true
  tasks:
  - name: Install httpd package
    yum: name=vsftpd state=installed

  - name: Start service
    service:
      name: vsftpd
      state: started

18. Create a playbook called archive.yml under /home/bob/playbooks directory on student-node,
 an inventory file called inventory is already placed under /home/bob/playbooks directory`. 

Perform below task using this playbook:


Create an archive of /usr/src/ecommerce/ directory present on each node ie. node01 and node02. 
The archive name must be demo.tar.gz (make sure that archive format is tar.gz) and save it
 under /opt/ecommerce/ directory on each node itself.

---
- hosts: all
  become: true
  tasks:
  - name: Create an archive demo.tar.gz
    archive:
      path: /usr/src/ecommerce/
      dest: /opt/ecommerce/demo.tar.gz



19. Using Ansible galaxy, install an Ansible role called geerlingguy.nodejs under /home/bob/playbooks/roles directory.
Run the below command to install ansible role geerlingguy.nodejs under location /home/bob/playbooks/roles:

ansible-galaxy install geerlingguy.nodejs -p /home/bob/playbooks/roles

20. Create an Ansible role called package under /home/bob/playbooks/roles directory on student-node.
 It should install a package called nginx and should start its service as well.


Further consume this role in /home/bob/playbooks/role.yml playbook so that this role can be applied on node01

---
# tasks file for nginx
- name: Install Nginx
  ansible.builtin.package:
    name: nginx 
    state: latest
- name: Start Nginx Service
  ansible.builtin.service:
    name: nginx 
    state: started

Now modify the /home/bob/playbooks/role.yml playbook so that it looks like as below:

---
- hosts: node01
  become: true
  roles:
    - roles/package

cd /home/bob/playbooks/
ansible-playbook -i inventory role.yml






























