NSIBLE LOOPS

In this lab exercise you will use below hosts. Please note down some details
 about these hosts as given below :


student-node :- This host will act as an Ansible master node where you will
 create playbooks, inventory, roles etc and you will be running your playbooks
 from this host itself.


node01 :- This host will act as an Ansible client/remote host where you will
 setup/install some stuff using Ansible playbooks. Below are the SSH credentials for this host:


User: bob
Password: caleston123


node02 :- This host will also act as an Ansible client/remote host where you will
 setup/install some stuff using Ansible playbooks. Below are the SSH credentials for this host:


User: bob
Password: caleston123


Note: Please type exit or logout on the terminal or press CTRL + d to log out from a specific node.

1. Can loops be executed on dictionary values in Ansible?
Yes, loops can be executed on dictionary values as well.

3. Which type of plugin with_* directives use in Ansible?
Ans = with_* directives use lookup plugin.

4. The playbook /home/bob/playbooks/fruits.yml currently runs an echo command to print a fruit name. 
Apply a loop directive (with_items) to the task to print all fruits defined under the fruits variable.

---
-  name: 'Print list of fruits'
   hosts: localhost
   vars:
     fruits:
       - Apple
       - Banana
       - Grapes
       - Orange
   tasks:
     - command: 'echo "{{ item }}"'
       with_items: '{{ fruits }}'

5. We are attempting to install multiple packages using the yum module for a more realistic use case. 
The playbook /home/bob/playbooks/packages.yml installs only a single package. Update it to install all
 packages defined under packages variable.

---
- name: 'Install required packages'
  hosts: localhost
  become: yes
  vars:
    packages:
      - httpd
      - make
      - vim
  tasks:
    - yum:
        name: '{{ item }}'
        state: present
      with_items: '{{ packages }}'
6. Which of the following Ansible built-in variable populates the flavour of the operating system?
Ans = ansible_os_family is the Ansible built-in variable that populates the flavour of the operating system.

7. Which keyword is used to define a condition in an Ansible playbook?
Ans = "when"

8. As per the given playbook, will Ansible install the vim package on a RedHat based machine?
---
- name: Install package
  hosts: app1
  tasks:
    - name: Install
      package:
        name: vim
        state: present
      when: ansible_os_family != "RedHat"
Ans = No

9. There is a playbook named nginx.yaml under /home/bob/playbooks directory.
 It is starting nginx service on all hosts defined in /home/bob/playbooks/inventory inventory file.
 Use the when condition to run this task only on node02 host.

---
-  name: 'Execute a script on all web server nodes'
   hosts: all
   become: yes
   tasks:
     -  service: 'name=nginx state=started'
        when: 'ansible_host=="node02"'

10. The playbook under /home/bob/playbooks/age.yaml , has a variable defined called age. 
The two tasks attempt to print if I am a child or an Adult. Use the when conditional to 
print if I am a child or an Adult based on whether my age is < 18 (Child) or >= 18 (Adult).

---
- name: 'Am I an Adult or a Child?'
  hosts: localhost
  vars:
    age: 25
  tasks:
    - name: I am a Child
      command: 'echo "I am a Child"'
      when: 'age < 18'
    - name: I am an Adult
      command: 'echo "I am an Adult"'
      when: 'age >= 18'

11. Playbook /home/bob/playbooks/nameserver.yaml attempts to add an entry in /etc/resolv.conf
 file to add a new nameserver.


The first task in the playbook is using the shell module to display the existing contents 
of /etc/resolv.conf file and the second one is adding a new line containing the name server
 details into the file. However, when this playbook is run multiple times, it keeps adding
 new entries of same line into the resolv.conf file. To resolve this issue, update the playbook
 as per details mentioned below.

    Add a register directive to store the output of the first task to a variable called command_output

    Then add a conditional to the second task to check if the output already contains the 
name server (10.0.250.10). Use command_output.stdout.find(<IP>) == -1


Note:
a. A better way to do this would be to use the lineinfile module. This is just for practice.


b.shell and command modules are similar in a way that they are used to execute a command on the
 system. However, shell executes the command inside a shell giving us access to environment
 variables and redirection using >>.


- name: 'Add name server entry if not already entered'
  hosts: localhost
  become: yes
  tasks:
    - shell: 'cat /etc/resolv.conf'
      register: command_output
    - shell: 'echo "nameserver 10.0.250.10" >> /etc/resolv.conf'
      when: 'command_output.stdout.find("10.0.250.10") == -1'















