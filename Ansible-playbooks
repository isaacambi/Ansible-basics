NSIBLE PLAYBOOKS
1.In this lab exercise you will use below hosts. Please note down some details 
about these hosts as given below :


student-node :- This host will act as an Ansible master node where you will
 create playbooks, inventory, roles etc and you will be running your playbooks
 from this host itself.


node01 :- This host will act as an Ansible client/remote host where you will
 setup/install some stuff using Ansible playbooks. Below are the SSH credentials for this host:


User: bob
Password: caleston123


node02 :- This host will also act as an Ansible client/remote host where you 
will setup/install some stuff using Ansible playbooks. Below are the SSH credentials for this host:


User: bob
Password: caleston123


Note: Please type exit or logout on the terminal or press CTRL + d to log out from a specific node.

2. Which of the following formats is the Ansible playbook written in?
Ans = Yaml

3. How many Ansible plays are there in the following given playbook?
-
- name: Setup apache
  hosts: webserver
  tasks:
    - name: install httpd
      yum:
        name: httpd
        state: installed
    - name: Start service
      service:
        name: httpd
        state: started

- name: Setup tomcat
  hosts: appserver
  tasks:
    - name: install httpd
      yum:
        name: tomcat
        state: installed
    - name: Start service
      service:
        name: tomcat
        state: started
solution: two, the first one is "setup apache" and "setup tomcat"

4. How many tasks are there under Setup apache Ansible play?
Ans = two
In the given playbook, there are two tasks named install httpd and Start 
service under Setup apache Ansible play.

5. If we use the following inventory, on which hosts will Ansible install
 the httpd package using the given playbook? 
[webserver]
web1
web2
[appserver]
app1
app2
app3

solution
The httpd package is being installed by Setup apache play, which is supposed to run
 for webserver hosts. As per the given inventory, webserver group contains two hosts,
 web1 and web2, so the playbook will install httpd package on web1 and web2 hosts.

6. Which of the following commands can you use to run an Ansible playbook named install.yaml?

(A) ansible-playbook install.yaml


(B) ansible-playbook run install.yaml


(C) ansible-playbook -p install.yaml


(D) ansible-playbook -i install.yaml
solution = nsible-playbook install.yaml command can be used to run install.yaml playbook.

7. A sample playbook named update_service.yml is shown below, it is supposed to update 
a service on your servers.
hosts: all
  tasks:
    - name: Install a new package
      apt:
        name: new_package
        state: present

    - name: Update the service
      service:
        name: my_service
        state: restarted

    - name: Check service status
      service:
        name: my_service
        state: started




Which command would you use to run update_service.yml playbook in check mode?
A. ansible update_service.yml
B. ansible-playbook update_service.yml --check
C. ansible-playbook update_service.yml
D. ansible-playbook --check update_service.yml

8. Consider again the same sample playbook named update_service.yml as shown below.
- hosts: all
  tasks:
    - name: Install a new package
      apt:
        name: new_package
        state: present

    - name: Update the service
      service:
        name: my_service
        state: restarted

    - name: Check service status
      service:
        name: my_service
        state: started

Let's suppose you have already ran this playbook on your server. Now, once you run
 this playbook in check mode against same server, which tasks would result in changed status?

A. Install a new package
B. Update the service
C. Check service status
D. All of the tasks

In the provided sample playbook update_service.yml, there are three tasks:

A. Install a new package
B. Update the service
C. Check service status

When update_service.yml playbook is already ran on a server and we try to run it 
again in check mode against same server, Ansible will indicate which tasks would 
result in changed status.

The task Install a new package would not be marked as changed because it's just
 ensuring the package is present and that was already installed on the server from 
earlier execution(s).

The task Update the service would be marked as changed because restarting a service
 is a change in state.

The task Check service status would not be marked as changed since it's only verifying
 the service's state, and previous task has already started it.

Therefore, the tasks that would result in changed status is:
Update the service

9. There is another sample playbook named configure_database.yml that modifies a
 configuration file on your database servers. The initial code sample is as follows:
- hosts: all
  tasks:
    - name: Set max connections
      lineinfile:
        path: /etc/postgresql/12/main/postgresql.conf
        line: 'max_connections = 500'

    - name: Set listen addresses
      lineinfile:
        path: /etc/postgresql/12/main/postgresql.conf
        line: 'listen_addresses = "*"'

Which command would you use to run the configure_database.yml playbook in both check 
mode and diff mode?
Ans = o run the configure_database.yml playbook in both check mode and diff mode, use 
ansible-playbook configure_database.yml --check --diff command.

10. Consider again the same sample playbook named configure_database.yml as shown below.
- hosts: all
  tasks:
    - name: Set max connections
      lineinfile:
        path: /etc/postgresql/12/main/postgresql.conf
        line: 'max_connections = 500'

    - name: Set listen addresses
      lineinfile:
        path: /etc/postgresql/12/main/postgresql.conf
        line: 'listen_addresses = "*"'
To check the configure_database.yml playbook for syntax errors, you can use 
ansible-playbook --syntax-check configure_database.yml command.

11. You've been given a playbook named database_setup.yml that is supposed to set up
 a PostgreSQL database on your servers. Before deploying it, you want to ensure that
 it adheres to best practices and doesn't have any style-related issues.
- name: Database Setup Playbook
  hosts: db_servers
  tasks:
    - name: Ensure PostgreSQL is installed
      apt:
        name: postgresql
        state: latest
        update_cache: yes

    - name: Start PostgreSQL service
      service:
        name: postgresql
        state: started

    - copy:
        src: /path/to/pg_hba.conf
        dest: /etc/postgresql/12/main/pg_hba.conf
      notify:
        - Restart PostgreSQL

Which command would you use to run ansible-lint on the database_setup.yml playbook?
Ans = To run ansible-lint on the database_setup.yml playbook, use ansible-lint database_setup.yml command.

12. Consider again the same sample playbook named database_setup.yml as shown below.
- name: Database Setup Playbook
  hosts: db_servers
  tasks:
    - name: Ensure PostgreSQL is installed
      apt:
        name: postgresql
        state: latest
        update_cache: yes

    - name: Start PostgreSQL service
      service:
        name: postgresql
        state: started

    - copy:
        src: /path/to/pg_hba.conf
        dest: /etc/postgresql/12/main/pg_hba.conf
      notify:
        - Restart PostgreSQL
solution
After running ansible-lint on the playbook, which of the following issues might you expect to see?
After running ansible-lint on the playbook, the following issues might be seen.


A. Incorrect indentation.
C. Missing name attribute for a task.

13. You've been given feedback from ansible-lint about potential issues in your hypothetical
 webserver_setup.yml playbook. The feedback mentions issues with indentation, deprecated modules,
 and missing name attributes.
Which of the following is NOT a recommended action based on the feedback?
Ans = Ignoring the feedback and proceeding with playbook execution is definitely not a recommended action.

14. If ansible-lint provides no output after checking a playbook, what does it indicate?
If Ansible-lint provides no output after checking a playbook, it indicates that, 
the playbook adheres to best practices and has no style-related issues.

15. Update the name of the play in /home/bob/playbooks/playbook.yaml playbook to Execute a 
date command on localhost.

16. Update the playbook /home/bob/playbooks/playbook.yaml to add a task name Task to 
display hosts file for the existing task.


17. We have reset the playbook /home/bob/playbooks/playbook.yaml, now update it to add another
 task. The new task must execute the command cat /etc/resolv.conf and set its name to Task to display nameservers.
---
- name: 'Execute two commands on localhost'
  hosts: localhost
  become: yes
  tasks:
     - name: 'Execute a date command'
       command: date
     - name: 'Task to display nameservers'
       command: 'cat /etc/resolv.conf'
18. So far, we have been running all tasks on localhost. We would now like to run these tasks 
on node01, this host is already defined in /home/bob/playbooks/inventory file. Update the
 playbook /home/bob/playbooks/playbook.yaml to run the tasks on the node01 host.

19. Refer to the /home/bob/playbooks/inventory file. We would like to run
 the /home/bob/playbooks/playbook.yaml on all servers defined under web_nodes group.

Note: Use the group name in playbook as defined in the inventory file.
---
- name: 'Execute two commands on web_node1'
  hosts: web_nodes
  tasks:
     - name: 'Execute a date command'
       command: date
     - name: 'Execute a command to display hosts file'
       command: 'cat /etc/hosts'
solution
vi /home/bob/playbooks/playbook.yaml

--
- name: 'Execute two commands on web_node1'
  hosts: web_nodes
  tasks:
     - name: 'Execute a date command'
       command: date
     - name: 'Execute a command to display hosts file'
       command: 'cat /etc/hosts'

cd /home/bob/playbooks
ansible-playbook -i inventory playbook.yaml

20. Update the /home/bob/playbooks/playbook.yaml to add a new play named Execute a 
command on node02, and a task under it to execute cat /etc/hosts command on node02 
host, name the task Task to display hosts file on node02.

Refer to the given inventory file.
vi /home/bob/playbooks/playbook.yaml

---
- name: 'Execute two commands on node01'
  hosts: node01
  become: yes
  tasks:
    - name: 'Execute a date command'
      command: date
    - name: 'Task to display hosts file on node01'
      command: 'cat /etc/hosts'
- name: 'Execute a command on node02'
  hosts: node02
  become: yes
  tasks:
     - name: 'Task to display hosts file on node02'
       command: 'cat /etc/hosts'
cd /home/bob/playbooks
ansible-playbook -i inventory playbook.yaml
















